<?php

/**
 * BaseDiaryImage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $diary_id
 * @property integer $file_id
 * @property integer $number
 * @property Diary $Diary
 * @property File $File
 * 
 * @method integer    getId()       Returns the current record's "id" value
 * @method integer    getDiaryId()  Returns the current record's "diary_id" value
 * @method integer    getFileId()   Returns the current record's "file_id" value
 * @method integer    getNumber()   Returns the current record's "number" value
 * @method Diary      getDiary()    Returns the current record's "Diary" value
 * @method File       getFile()     Returns the current record's "File" value
 * @method DiaryImage setId()       Sets the current record's "id" value
 * @method DiaryImage setDiaryId()  Sets the current record's "diary_id" value
 * @method DiaryImage setFileId()   Sets the current record's "file_id" value
 * @method DiaryImage setNumber()   Sets the current record's "number" value
 * @method DiaryImage setDiary()    Sets the current record's "Diary" value
 * @method DiaryImage setFile()     Sets the current record's "File" value
 * 
 * @package    OpenPNE
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseDiaryImage extends opDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('diary_image');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('diary_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('file_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('number', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));


        $this->index('diary_id_number', array(
             'fields' => 
             array(
              0 => 'diary_id',
              1 => 'number',
             ),
             'type' => 'unique',
             ));
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Diary', array(
             'local' => 'diary_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasOne('File', array(
             'local' => 'file_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));
    }
}