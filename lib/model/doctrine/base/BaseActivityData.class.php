<?php

/**
 * BaseActivityData
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $member_id
 * @property integer $in_reply_to_activity_id
 * @property string $body
 * @property string $uri
 * @property integer $public_flag
 * @property boolean $is_pc
 * @property boolean $is_mobile
 * @property string $source
 * @property string $source_uri
 * @property string $foreign_table
 * @property integer $foreign_id
 * @property Member $Member
 * @property ActivityData $InReplyTo
 * @property Doctrine_Collection $ActivityData
 * @property Doctrine_Collection $Images
 * 
 * @method integer             getId()                      Returns the current record's "id" value
 * @method integer             getMemberId()                Returns the current record's "member_id" value
 * @method integer             getInReplyToActivityId()     Returns the current record's "in_reply_to_activity_id" value
 * @method string              getBody()                    Returns the current record's "body" value
 * @method string              getUri()                     Returns the current record's "uri" value
 * @method integer             getPublicFlag()              Returns the current record's "public_flag" value
 * @method boolean             getIsPc()                    Returns the current record's "is_pc" value
 * @method boolean             getIsMobile()                Returns the current record's "is_mobile" value
 * @method string              getSource()                  Returns the current record's "source" value
 * @method string              getSourceUri()               Returns the current record's "source_uri" value
 * @method string              getForeignTable()            Returns the current record's "foreign_table" value
 * @method integer             getForeignId()               Returns the current record's "foreign_id" value
 * @method Member              getMember()                  Returns the current record's "Member" value
 * @method ActivityData        getInReplyTo()               Returns the current record's "InReplyTo" value
 * @method Doctrine_Collection getActivityData()            Returns the current record's "ActivityData" collection
 * @method Doctrine_Collection getImages()                  Returns the current record's "Images" collection
 * @method ActivityData        setId()                      Sets the current record's "id" value
 * @method ActivityData        setMemberId()                Sets the current record's "member_id" value
 * @method ActivityData        setInReplyToActivityId()     Sets the current record's "in_reply_to_activity_id" value
 * @method ActivityData        setBody()                    Sets the current record's "body" value
 * @method ActivityData        setUri()                     Sets the current record's "uri" value
 * @method ActivityData        setPublicFlag()              Sets the current record's "public_flag" value
 * @method ActivityData        setIsPc()                    Sets the current record's "is_pc" value
 * @method ActivityData        setIsMobile()                Sets the current record's "is_mobile" value
 * @method ActivityData        setSource()                  Sets the current record's "source" value
 * @method ActivityData        setSourceUri()               Sets the current record's "source_uri" value
 * @method ActivityData        setForeignTable()            Sets the current record's "foreign_table" value
 * @method ActivityData        setForeignId()               Sets the current record's "foreign_id" value
 * @method ActivityData        setMember()                  Sets the current record's "Member" value
 * @method ActivityData        setInReplyTo()               Sets the current record's "InReplyTo" value
 * @method ActivityData        setActivityData()            Sets the current record's "ActivityData" collection
 * @method ActivityData        setImages()                  Sets the current record's "Images" collection
 * 
 * @package    OpenPNE
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseActivityData extends opDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('activity_data');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'comment' => 'Serial number',
             'length' => '4',
             ));
        $this->hasColumn('member_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'comment' => 'Member id',
             'length' => '4',
             ));
        $this->hasColumn('in_reply_to_activity_id', 'integer', 4, array(
             'type' => 'integer',
             'comment' => 'Activity data id is in reply to',
             'length' => '4',
             ));
        $this->hasColumn('body', 'string', 140, array(
             'type' => 'string',
             'notnull' => true,
             'comment' => 'Activity body',
             'length' => '140',
             ));
        $this->hasColumn('uri', 'string', null, array(
             'type' => 'string',
             'comment' => 'Activity URI',
             ));
        $this->hasColumn('public_flag', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'comment' => 'Public flag of activity',
             'length' => '1',
             ));
        $this->hasColumn('is_pc', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             'comment' => 'Display this in PC?',
             ));
        $this->hasColumn('is_mobile', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             'comment' => 'Display this in Mobile?',
             ));
        $this->hasColumn('source', 'string', 64, array(
             'type' => 'string',
             'comment' => 'The source caption',
             'length' => '64',
             ));
        $this->hasColumn('source_uri', 'string', null, array(
             'type' => 'string',
             'comment' => 'The source URI',
             ));
        $this->hasColumn('foreign_table', 'string', null, array(
             'type' => 'string',
             'comment' => 'Reference table name',
             ));
        $this->hasColumn('foreign_id', 'integer', null, array(
             'type' => 'integer',
             'comment' => 'The id of reference table',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('comment', 'Saves activities');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Member', array(
             'local' => 'member_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasOne('ActivityData as InReplyTo', array(
             'local' => 'in_reply_to_activity_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasMany('ActivityData', array(
             'local' => 'id',
             'foreign' => 'in_reply_to_activity_id'));

        $this->hasMany('ActivityImage as Images', array(
             'local' => 'id',
             'foreign' => 'activity_data_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}