<?php

/**
 * BaseApplicationPersistentData
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $application_id
 * @property integer $member_id
 * @property string $name
 * @property string $value
 * @property Application $Application
 * @property Member $Member
 * 
 * @method integer                   getApplicationId()  Returns the current record's "application_id" value
 * @method integer                   getMemberId()       Returns the current record's "member_id" value
 * @method string                    getName()           Returns the current record's "name" value
 * @method string                    getValue()          Returns the current record's "value" value
 * @method Application               getApplication()    Returns the current record's "Application" value
 * @method Member                    getMember()         Returns the current record's "Member" value
 * @method ApplicationPersistentData setApplicationId()  Sets the current record's "application_id" value
 * @method ApplicationPersistentData setMemberId()       Sets the current record's "member_id" value
 * @method ApplicationPersistentData setName()           Sets the current record's "name" value
 * @method ApplicationPersistentData setValue()          Sets the current record's "value" value
 * @method ApplicationPersistentData setApplication()    Sets the current record's "Application" value
 * @method ApplicationPersistentData setMember()         Sets the current record's "Member" value
 * 
 * @package    OpenPNE
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseApplicationPersistentData extends opDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('application_persistent_data');
        $this->hasColumn('application_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('member_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '128',
             ));
        $this->hasColumn('value', 'string', null, array(
             'type' => 'string',
             ));


        $this->index('name_UNIQUE', array(
             'fields' => 
             array(
              0 => 'application_id',
              1 => 'member_id',
              2 => 'name',
             ),
             'type' => 'unique',
             ));
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Application', array(
             'local' => 'application_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Member', array(
             'local' => 'member_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}